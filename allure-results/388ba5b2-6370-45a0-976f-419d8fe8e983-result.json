{"name": "Login with Empty Credentials", "status": "broken", "statusDetails": {"message": "FileNotFoundError: [Errno 2] No such file or directory: '/Users/vivekkumar/screenshots/test_empty_credentials_failed_20250506-172405.png'", "trace": "self = <testcases.test_login.Test_001_Login object at 0x104887e10>\n\n    @allure.title(\"Login with Empty Credentials\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_empty_credentials(self):\n        self.logger.info(\"********** Testing Empty Credentials Login **********\")\n        self.lp = LoginPage(self.driver)\n        try:\n>           self.lp.login(\"\", \"\")\n\ntestcases/test_login.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageobjects/LoginPage.py:43: in login\n    self.enter_username(username)\npageobjects/LoginPage.py:19: in enter_username\n    WebDriverWait(self.driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"d21cb9d7e380870e6336053865a23637\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x104b1a200>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x0000000102c2ea54 cxxbridge1$str$ptr + 2803960\nE       1   chromedriver                        0x0000000102c26cf0 cxxbridge1$str$ptr + 2771860\nE       2   chromedriver                        0x0000000102772864 cxxbridge1$string$len + 93028\nE       3   chromedriver                        0x00000001027b9410 cxxbridge1$string$len + 382736\nE       4   chromedriver                        0x00000001027fa480 cxxbridge1$string$len + 649088\nE       5   chromedriver                        0x00000001027ad7ec cxxbridge1$string$len + 334572\nE       6   chromedriver                        0x0000000102bf3ccc cxxbridge1$str$ptr + 2562928\nE       7   chromedriver                        0x0000000102bf6f98 cxxbridge1$str$ptr + 2575932\nE       8   chromedriver                        0x0000000102bd42c4 cxxbridge1$str$ptr + 2433384\nE       9   chromedriver                        0x0000000102bf7810 cxxbridge1$str$ptr + 2578100\nE       10  chromedriver                        0x0000000102bc52f0 cxxbridge1$str$ptr + 2371988\nE       11  chromedriver                        0x0000000102c1757c cxxbridge1$str$ptr + 2708512\nE       12  chromedriver                        0x0000000102c17708 cxxbridge1$str$ptr + 2708908\nE       13  chromedriver                        0x0000000102c2693c cxxbridge1$str$ptr + 2770912\nE       14  libsystem_pthread.dylib             0x0000000190d59c0c _pthread_start + 136\nE       15  libsystem_pthread.dylib             0x0000000190d54b80 thread_start + 8\n\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <testcases.test_login.Test_001_Login object at 0x104887e10>\n\n    @allure.title(\"Login with Empty Credentials\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_empty_credentials(self):\n        self.logger.info(\"********** Testing Empty Credentials Login **********\")\n        self.lp = LoginPage(self.driver)\n        try:\n            self.lp.login(\"\", \"\")\n            validation_messages = self.driver.find_elements(By.CLASS_NAME, \"validation-message\")\n            assert len(validation_messages) > 0\n            self.logger.info(\"Empty credentials validation test PASSED\")\n        except Exception as e:\n>           self._handle_test_failure(\"empty_credentials\", e)\n\ntestcases/test_login.py:82: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntestcases/test_login.py:108: in _handle_test_failure\n    allure.attach.file(screenshot_path, name=f\"{test_name}_screenshot\", attachment_type=allure.attachment_type.PNG)\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/allure_commons/_allure.py:213: in file\n    plugin_manager.hook.attach_file(source=source, name=name, attachment_type=attachment_type, extension=extension)\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/pluggy/_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/pluggy/_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/allure_pytest/listener.py:256: in attach_file\n    self.allure_logger.attach_file(uuid4(), source, name=name, attachment_type=attachment_type, extension=extension)\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/allure_commons/reporter.py:160: in attach_file\n    plugin_manager.hook.report_attached_file(source=source, file_name=file_name)\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/pluggy/_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/pluggy/_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/allure_commons/logger.py:39: in report_attached_file\n    shutil.copy2(source, destination)\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/shutil.py:468: in copy2\n    copyfile(src, dst, follow_symlinks=follow_symlinks)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nsrc = '/Users/vivekkumar/screenshots/test_empty_credentials_failed_20250506-172405.png'\ndst = PosixPath('/Users/vivekkumar/Downloads/project-Framewok-master/allure-results/7a03de62-065f-4984-961a-660ed66e2189-attachment.png')\n\n    def copyfile(src, dst, *, follow_symlinks=True):\n        \"\"\"Copy data from src to dst in the most efficient way possible.\n    \n        If follow_symlinks is not set and src is a symbolic link, a new\n        symlink will be created instead of copying the file it points to.\n    \n        \"\"\"\n        sys.audit(\"shutil.copyfile\", src, dst)\n    \n        if _samefile(src, dst):\n            raise SameFileError(\"{!r} and {!r} are the same file\".format(src, dst))\n    \n        file_size = 0\n        for i, fn in enumerate([src, dst]):\n            try:\n                st = _stat(fn)\n            except OSError:\n                # File most likely does not exist\n                pass\n            else:\n                # XXX What about other special files? (sockets, devices...)\n                if stat.S_ISFIFO(st.st_mode):\n                    fn = fn.path if isinstance(fn, os.DirEntry) else fn\n                    raise SpecialFileError(\"`%s` is a named pipe\" % fn)\n                if _WINDOWS and i == 0:\n                    file_size = st.st_size\n    \n        if not follow_symlinks and _islink(src):\n            os.symlink(os.readlink(src), dst)\n        else:\n>           with open(src, 'rb') as fsrc:\nE           FileNotFoundError: [Errno 2] No such file or directory: '/Users/vivekkumar/screenshots/test_empty_credentials_failed_20250506-172405.png'\n\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/shutil.py:260: FileNotFoundError"}, "attachments": [{"name": "empty_credentials_screenshot", "source": "7a03de62-065f-4984-961a-660ed66e2189-attachment.png", "type": "image/png"}, {"name": "log", "source": "7080edef-4f74-46a5-b269-682e83b8532f-attachment.txt", "type": "text/plain"}], "start": 1746532435221, "stop": 1746532445517, "uuid": "0d05eaa7-5911-41d6-b96c-bd72ca13770d", "historyId": "3be95ad5161ca5e2db6738104f4660ad", "testCaseId": "3be95ad5161ca5e2db6738104f4660ad", "fullName": "testcases.test_login.Test_001_Login#test_empty_credentials", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "Test_001_Login"}, {"name": "host", "value": "viveks-MacBook-Air-2.local"}, {"name": "thread", "value": "18789-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_login"}]}